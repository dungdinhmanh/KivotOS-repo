name: Build & Publish APT (aptly + Pages)

on:
  workflow_dispatch:
  push:
    paths:
      - 'pkgs/**'

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y aptly gnupg dpkg-dev

      - name: Import GPG & enable loopback
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.gnupg
          echo 'allow-loopback-pinentry' > ~/.gnupg/gpg-agent.conf
          echo 'pinentry-mode loopback'  > ~/.gnupg/gpg.conf
          gpgconf --reload gpg-agent
          echo "$GPG_PRIVATE_KEY" | gpg --batch --yes --import
          echo "KEYID=$(gpg --list-keys --with-colons | awk -F: '/^pub/{print $5; exit}')" >> $GITHUB_ENV

      - name: Collect packages
        run: |
          mkdir -p artifacts
          cp pkgs/*.deb artifacts/ || true
          test -n "$(ls -A artifacts 2>/dev/null)" || { echo "No .deb found in pkgs/"; exit 1; }

      - name: Configure aptly filesystem endpoint
        run: |
          mkdir -p site
          cat > ~/.aptly.conf <<'JSON'
          {
            "rootDir": ".aptly",
            "downloadConcurrency": 4,
            "ppaDistributorSkipArchiveCleanup": true,
            "FileSystemPublishEndpoints": {
              "site": { "rootDir": "site", "linkMethod": "copy" }
            }
          }
          JSON

      - name: Create & publish APT repo with aptly
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}  # để trống nếu key không có pass
        run: |
          rm -rf site
          mkdir -p site
          aptly repo create -distribution=trixie -component=main kivotos || true
          aptly repo add kivotos artifacts/*.deb
          aptly publish repo -architectures=amd64 -gpg-key="${KEYID}" -passphrase="${GPG_PASSPHRASE}" \
            kivotos filesystem:site:
          gpg --armor --export "${KEYID}" > site/pubkey.gpg
          touch site/.nojekyll

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
